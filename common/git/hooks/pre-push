#!/bin/sh

remote="$1"
url="$2"

z40=0000000000000000000000000000000000000000

IFS=' '
while read local_ref local_sha remote_ref remote_sha
do
	if [ "$local_sha" = $z40 ]
	then
		# Handle delete
		:
	else
		if [ "$remote_sha" = $z40 ]
		then
			# New branch, examine all commits
			range="$local_sha"
		else
			# Update to existing branch, examine new commits
			range="$remote_sha..$local_sha"
		fi

		# Check for WIP commit
		commit=`git rev-list -n 1 --grep '^WIP' "$range"`
		if [ -n "$commit" ]
		then
			echo "Found WIP commit in $local_ref, not pushing"
			exit 1
		fi
		commit=`git rev-list -n 1 --grep '^squash!' "$range"`
		if [ -n "$commit" ]
		then
			echo "Found squash! commit in $local_ref, not pushing"
			exit 1
		fi
		commit=`git rev-list -n 1 --grep '^fixup!' "$range"`
		if [ -n "$commit" ]
		then
			echo "Found fixup! commit in $local_ref, not pushing"
			exit 1
		fi
		commit=`git rev-list -n 1 --grep '^FIXUP' "$range"`
		if [ -n "$commit" ]
		then
			echo "Found fixup! commit in $local_ref, not pushing"
			exit 1
		fi
		commit=`git log -n 1 --merges --format=reference "$range"`
		if [ -n "$commit" ]
		then
			echo "Found merge commit in $local_ref, not pushing"
		fi
	fi
done

exit 0
